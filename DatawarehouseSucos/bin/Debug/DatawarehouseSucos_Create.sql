/*
Deployment script for DatawarehouseSucos

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "DatawarehouseSucos"
:setvar DefaultFilePrefix "DatawarehouseSucos"
:setvar DefaultDataPath ""
:setvar DefaultLogPath ""

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [master];


GO

IF (DB_ID(N'$(DatabaseName)') IS NOT NULL) 
BEGIN
    ALTER DATABASE [$(DatabaseName)]
    SET SINGLE_USER WITH ROLLBACK IMMEDIATE;
    DROP DATABASE [$(DatabaseName)];
END

GO
PRINT N'Creating $(DatabaseName)...'
GO
CREATE DATABASE [$(DatabaseName)] COLLATE SQL_Latin1_General_CP1_CI_AS
GO
USE [$(DatabaseName)];


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ANSI_NULLS ON,
                ANSI_PADDING ON,
                ANSI_WARNINGS ON,
                ARITHABORT ON,
                CONCAT_NULL_YIELDS_NULL ON,
                NUMERIC_ROUNDABORT OFF,
                QUOTED_IDENTIFIER ON,
                ANSI_NULL_DEFAULT ON,
                CURSOR_DEFAULT LOCAL,
                RECOVERY FULL,
                CURSOR_CLOSE_ON_COMMIT OFF,
                AUTO_CREATE_STATISTICS ON,
                AUTO_SHRINK OFF,
                AUTO_UPDATE_STATISTICS ON,
                RECURSIVE_TRIGGERS OFF 
            WITH ROLLBACK IMMEDIATE;
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_CLOSE OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ALLOW_SNAPSHOT_ISOLATION OFF;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET READ_COMMITTED_SNAPSHOT OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_UPDATE_STATISTICS_ASYNC OFF,
                PAGE_VERIFY NONE,
                DATE_CORRELATION_OPTIMIZATION OFF,
                DISABLE_BROKER,
                PARAMETERIZATION SIMPLE,
                SUPPLEMENTAL_LOGGING OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET TRUSTWORTHY OFF,
        DB_CHAINING OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET HONOR_BROKER_PRIORITY OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO
ALTER DATABASE [$(DatabaseName)]
    SET TARGET_RECOVERY_TIME = 0 SECONDS 
    WITH ROLLBACK IMMEDIATE;


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET FILESTREAM(NON_TRANSACTED_ACCESS = OFF),
                CONTAINMENT = NONE 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_CREATE_STATISTICS ON(INCREMENTAL = OFF),
                MEMORY_OPTIMIZED_ELEVATE_TO_SNAPSHOT = OFF,
                DELAYED_DURABILITY = DISABLED 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET QUERY_STORE (QUERY_CAPTURE_MODE = ALL, DATA_FLUSH_INTERVAL_SECONDS = 900, INTERVAL_LENGTH_MINUTES = 60, MAX_PLANS_PER_QUERY = 200, CLEANUP_POLICY = (STALE_QUERY_THRESHOLD_DAYS = 367), MAX_STORAGE_SIZE_MB = 100) 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET QUERY_STORE = OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE SCOPED CONFIGURATION SET MAXDOP = 0;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET MAXDOP = PRIMARY;
        ALTER DATABASE SCOPED CONFIGURATION SET LEGACY_CARDINALITY_ESTIMATION = OFF;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET LEGACY_CARDINALITY_ESTIMATION = PRIMARY;
        ALTER DATABASE SCOPED CONFIGURATION SET PARAMETER_SNIFFING = ON;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET PARAMETER_SNIFFING = PRIMARY;
        ALTER DATABASE SCOPED CONFIGURATION SET QUERY_OPTIMIZER_HOTFIXES = OFF;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET QUERY_OPTIMIZER_HOTFIXES = PRIMARY;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET TEMPORAL_HISTORY_RETENTION ON 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF fulltextserviceproperty(N'IsFulltextInstalled') = 1
    EXECUTE sp_fulltext_database 'enable';


GO
PRINT N'Creating [dbo].[dim_fabrica]...';


GO
CREATE TABLE [dbo].[dim_fabrica] (
    [cod_fabrica]  NVARCHAR (50)  NOT NULL,
    [desc_fabrica] NVARCHAR (200) NULL,
    PRIMARY KEY CLUSTERED ([cod_fabrica] ASC)
);


GO
PRINT N'Creating [dbo].[dim_cliente]...';


GO
CREATE TABLE [dbo].[dim_cliente] (
    [cod_cliente]   NVARCHAR (50)  NOT NULL,
    [desc_cliente]  NVARCHAR (200) NULL,
    [cod_cidade]    NVARCHAR (50)  NULL,
    [desc_cidade]   NVARCHAR (200) NULL,
    [cod_estado]    NVARCHAR (50)  NULL,
    [desc_estado]   NVARCHAR (200) NULL,
    [cod_regiao]    NVARCHAR (50)  NULL,
    [desc_regiao]   NVARCHAR (200) NULL,
    [cod_segmento]  NVARCHAR (50)  NULL,
    [desc_segmento] NVARCHAR (200) NULL,
    PRIMARY KEY CLUSTERED ([cod_cliente] ASC)
);


GO
PRINT N'Creating [dbo].[dim_categoria]...';


GO
CREATE TABLE [dbo].[dim_categoria] (
    [cod_categoria]  NVARCHAR (50)  NOT NULL,
    [desc_categoria] NVARCHAR (200) NULL,
    PRIMARY KEY CLUSTERED ([cod_categoria] ASC)
);


GO
PRINT N'Creating [dbo].[dim_marca]...';


GO
CREATE TABLE [dbo].[dim_marca] (
    [cod_marca]     NVARCHAR (50)  NOT NULL,
    [desc_marca]    NVARCHAR (200) NULL,
    [cod_categoria] NVARCHAR (50)  NULL,
    PRIMARY KEY CLUSTERED ([cod_marca] ASC)
);


GO
PRINT N'Creating [dbo].[dim_produto]...';


GO
CREATE TABLE [dbo].[dim_produto] (
    [cod_produto]  NVARCHAR (50)  NOT NULL,
    [desc_produto] NVARCHAR (200) NULL,
    [atr_tamanho]  NVARCHAR (200) NULL,
    [atr_sabor]    NVARCHAR (200) NULL,
    [cod_marca]    NVARCHAR (50)  NULL,
    PRIMARY KEY CLUSTERED ([cod_produto] ASC)
);


GO
PRINT N'Creating [dbo].[dim_organizacional]...';


GO
CREATE TABLE [dbo].[dim_organizacional] (
    [cod_filho]  NVARCHAR (50)  NOT NULL,
    [desc_filho] NVARCHAR (200) NULL,
    [cod_pai]    NVARCHAR (50)  NULL,
    [esquerda]   INT            NULL,
    [direita]    INT            NULL,
    [nivel]      INT            NULL,
    PRIMARY KEY CLUSTERED ([cod_filho] ASC)
);


GO
PRINT N'Creating [dbo].[dim_tempo]...';


GO
CREATE TABLE [dbo].[dim_tempo] (
    [cod_dia]            NVARCHAR (50) NOT NULL,
    [data]               DATE          NULL,
    [cod_semana]         INT           NULL,
    [nome_dia_semana]    NVARCHAR (50) NULL,
    [cod_mes]            INT           NULL,
    [nome_mes]           NVARCHAR (50) NULL,
    [cod_mes_ano]        NVARCHAR (50) NULL,
    [nome_mes_ano]       NVARCHAR (50) NULL,
    [cod_trimestre]      INT           NULL,
    [nome_trimestre]     NVARCHAR (50) NULL,
    [cod_trimentre_ano]  NVARCHAR (50) NULL,
    [nome_trimentre_ano] NVARCHAR (50) NULL,
    [cod_semestre]       INT           NULL,
    [nome_semestre]      NVARCHAR (50) NULL,
    [cod_semestre_ano]   NVARCHAR (50) NULL,
    [nome_semestre_ano]  NVARCHAR (50) NULL,
    [ano]                NVARCHAR (50) NULL,
    [tipo_dia]           NVARCHAR (50) NULL,
    PRIMARY KEY CLUSTERED ([cod_dia] ASC)
);


GO
PRINT N'Creating [dbo].[fato_001]...';


GO
CREATE TABLE [dbo].[fato_001] (
    [cod_cliente]        NVARCHAR (50) NOT NULL,
    [cod_produto]        NVARCHAR (50) NOT NULL,
    [cod_organizacional] NVARCHAR (50) NOT NULL,
    [cod_fabrica]        NVARCHAR (50) NOT NULL,
    [cod_dia]            NVARCHAR (50) NOT NULL,
    [faturamento]        FLOAT (53)    NULL,
    [imposto]            FLOAT (53)    NULL,
    [custo_variavel]     FLOAT (53)    NULL,
    [quantidade_vendida] FLOAT (53)    NULL,
    [unidade_vendida]    FLOAT (53)    NULL,
    PRIMARY KEY CLUSTERED ([cod_cliente] ASC, [cod_produto] ASC, [cod_organizacional] ASC, [cod_fabrica] ASC, [cod_dia] ASC)
);


GO
PRINT N'Creating [dbo].[fato_002]...';


GO
CREATE TABLE [dbo].[fato_002] (
    [cod_cliente] NVARCHAR (50) NOT NULL,
    [cod_produto] NVARCHAR (50) NOT NULL,
    [cod_fabrica] NVARCHAR (50) NOT NULL,
    [cod_dia]     NVARCHAR (50) NOT NULL,
    [frete]       FLOAT (53)    NULL,
    CONSTRAINT [PK_fato_002] PRIMARY KEY CLUSTERED ([cod_dia] ASC, [cod_fabrica] ASC, [cod_produto] ASC, [cod_cliente] ASC)
);


GO
PRINT N'Creating [dbo].[fato_003]...';


GO
CREATE TABLE [dbo].[fato_003] (
    [cod_fabrica] NVARCHAR (50) NOT NULL,
    [cod_dia]     NVARCHAR (50) NOT NULL,
    [custo_fixo]  FLOAT (53)    NULL,
    CONSTRAINT [PK_fato_003] PRIMARY KEY CLUSTERED ([cod_dia] ASC, [cod_fabrica] ASC)
);


GO
PRINT N'Creating [dbo].[fato_004]...';


GO
CREATE TABLE [dbo].[fato_004] (
    [cod_cliente]        NVARCHAR (50) NOT NULL,
    [cod_produto]        NVARCHAR (50) NOT NULL,
    [cod_organizacional] NVARCHAR (50) NOT NULL,
    [cod_dia]            NVARCHAR (50) NOT NULL,
    [meta_faturamento]   FLOAT (53)    NULL,
    PRIMARY KEY CLUSTERED ([cod_cliente] ASC, [cod_produto] ASC, [cod_organizacional] ASC, [cod_dia] ASC)
);


GO
PRINT N'Creating [dbo].[fato_005]...';


GO
CREATE TABLE [dbo].[fato_005] (
    [cod_produto] NVARCHAR (50) NOT NULL,
    [cod_fabrica] NVARCHAR (50) NOT NULL,
    [cod_dia]     NVARCHAR (50) NOT NULL,
    [meta_custo]  FLOAT (53)    NULL,
    PRIMARY KEY CLUSTERED ([cod_produto] ASC, [cod_fabrica] ASC, [cod_dia] ASC)
);


GO
PRINT N'Creating [dbo].[FK_dim_marca_dim_categoria]...';


GO
ALTER TABLE [dbo].[dim_marca]
    ADD CONSTRAINT [FK_dim_marca_dim_categoria] FOREIGN KEY ([cod_categoria]) REFERENCES [dbo].[dim_categoria] ([cod_categoria]);


GO
PRINT N'Creating [dbo].[FK_dim_produto_ToTable]...';


GO
ALTER TABLE [dbo].[dim_produto]
    ADD CONSTRAINT [FK_dim_produto_ToTable] FOREIGN KEY ([cod_marca]) REFERENCES [dbo].[dim_marca] ([cod_marca]);


GO
PRINT N'Creating [dbo].[FK_dim_organizacional_dim_organizacional]...';


GO
ALTER TABLE [dbo].[dim_organizacional]
    ADD CONSTRAINT [FK_dim_organizacional_dim_organizacional] FOREIGN KEY ([cod_pai]) REFERENCES [dbo].[dim_organizacional] ([cod_filho]);


GO
PRINT N'Creating [dbo].[FK_fato_001_dim_cliente]...';


GO
ALTER TABLE [dbo].[fato_001]
    ADD CONSTRAINT [FK_fato_001_dim_cliente] FOREIGN KEY ([cod_cliente]) REFERENCES [dbo].[dim_cliente] ([cod_cliente]);


GO
PRINT N'Creating [dbo].[FK_fato_001_dim_produto]...';


GO
ALTER TABLE [dbo].[fato_001]
    ADD CONSTRAINT [FK_fato_001_dim_produto] FOREIGN KEY ([cod_produto]) REFERENCES [dbo].[dim_produto] ([cod_produto]);


GO
PRINT N'Creating [dbo].[FK_fato_001_dim_organizacional]...';


GO
ALTER TABLE [dbo].[fato_001]
    ADD CONSTRAINT [FK_fato_001_dim_organizacional] FOREIGN KEY ([cod_organizacional]) REFERENCES [dbo].[dim_organizacional] ([cod_filho]);


GO
PRINT N'Creating [dbo].[FK_fato_001_dim_fabrica]...';


GO
ALTER TABLE [dbo].[fato_001]
    ADD CONSTRAINT [FK_fato_001_dim_fabrica] FOREIGN KEY ([cod_fabrica]) REFERENCES [dbo].[dim_fabrica] ([cod_fabrica]);


GO
PRINT N'Creating [dbo].[FK_fato_001_dim_dia]...';


GO
ALTER TABLE [dbo].[fato_001]
    ADD CONSTRAINT [FK_fato_001_dim_dia] FOREIGN KEY ([cod_dia]) REFERENCES [dbo].[dim_tempo] ([cod_dia]);


GO
PRINT N'Creating [dbo].[FK_fato_002_dim_cliente]...';


GO
ALTER TABLE [dbo].[fato_002]
    ADD CONSTRAINT [FK_fato_002_dim_cliente] FOREIGN KEY ([cod_cliente]) REFERENCES [dbo].[dim_cliente] ([cod_cliente]);


GO
PRINT N'Creating [dbo].[FK_fato_002_dim_produto]...';


GO
ALTER TABLE [dbo].[fato_002]
    ADD CONSTRAINT [FK_fato_002_dim_produto] FOREIGN KEY ([cod_produto]) REFERENCES [dbo].[dim_produto] ([cod_produto]);


GO
PRINT N'Creating [dbo].[FK_fato_002_dim_fabrica]...';


GO
ALTER TABLE [dbo].[fato_002]
    ADD CONSTRAINT [FK_fato_002_dim_fabrica] FOREIGN KEY ([cod_fabrica]) REFERENCES [dbo].[dim_fabrica] ([cod_fabrica]);


GO
PRINT N'Creating [dbo].[FK_fato_002_dim_dia]...';


GO
ALTER TABLE [dbo].[fato_002]
    ADD CONSTRAINT [FK_fato_002_dim_dia] FOREIGN KEY ([cod_dia]) REFERENCES [dbo].[dim_tempo] ([cod_dia]);


GO
PRINT N'Creating [dbo].[FK_fato_003_dim_fabrica]...';


GO
ALTER TABLE [dbo].[fato_003]
    ADD CONSTRAINT [FK_fato_003_dim_fabrica] FOREIGN KEY ([cod_fabrica]) REFERENCES [dbo].[dim_fabrica] ([cod_fabrica]);


GO
PRINT N'Creating [dbo].[FK_fato_003_dim_dia]...';


GO
ALTER TABLE [dbo].[fato_003]
    ADD CONSTRAINT [FK_fato_003_dim_dia] FOREIGN KEY ([cod_dia]) REFERENCES [dbo].[dim_tempo] ([cod_dia]);


GO
PRINT N'Creating [dbo].[FK_fato_004_dim_cliente]...';


GO
ALTER TABLE [dbo].[fato_004]
    ADD CONSTRAINT [FK_fato_004_dim_cliente] FOREIGN KEY ([cod_cliente]) REFERENCES [dbo].[dim_cliente] ([cod_cliente]);


GO
PRINT N'Creating [dbo].[FK_fato_004_dim_produto]...';


GO
ALTER TABLE [dbo].[fato_004]
    ADD CONSTRAINT [FK_fato_004_dim_produto] FOREIGN KEY ([cod_produto]) REFERENCES [dbo].[dim_produto] ([cod_produto]);


GO
PRINT N'Creating [dbo].[FK_fato_004_dim_organizacional]...';


GO
ALTER TABLE [dbo].[fato_004]
    ADD CONSTRAINT [FK_fato_004_dim_organizacional] FOREIGN KEY ([cod_organizacional]) REFERENCES [dbo].[dim_organizacional] ([cod_filho]);


GO
PRINT N'Creating [dbo].[FK_fato_004_dim_dia]...';


GO
ALTER TABLE [dbo].[fato_004]
    ADD CONSTRAINT [FK_fato_004_dim_dia] FOREIGN KEY ([cod_dia]) REFERENCES [dbo].[dim_tempo] ([cod_dia]);


GO
PRINT N'Creating [dbo].[FK_fato_005_dim_produto]...';


GO
ALTER TABLE [dbo].[fato_005]
    ADD CONSTRAINT [FK_fato_005_dim_produto] FOREIGN KEY ([cod_produto]) REFERENCES [dbo].[dim_produto] ([cod_produto]);


GO
PRINT N'Creating [dbo].[FK_fato_005_dim_fabrica]...';


GO
ALTER TABLE [dbo].[fato_005]
    ADD CONSTRAINT [FK_fato_005_dim_fabrica] FOREIGN KEY ([cod_fabrica]) REFERENCES [dbo].[dim_fabrica] ([cod_fabrica]);


GO
PRINT N'Creating [dbo].[FK_fato_005_dim_dia]...';


GO
ALTER TABLE [dbo].[fato_005]
    ADD CONSTRAINT [FK_fato_005_dim_dia] FOREIGN KEY ([cod_dia]) REFERENCES [dbo].[dim_tempo] ([cod_dia]);


GO
-- Refactoring step to update target server with deployed transaction logs

IF OBJECT_ID(N'dbo.__RefactorLog') IS NULL
BEGIN
    CREATE TABLE [dbo].[__RefactorLog] (OperationKey UNIQUEIDENTIFIER NOT NULL PRIMARY KEY)
    EXEC sp_addextendedproperty N'microsoft_database_tools_support', N'refactoring log', N'schema', N'dbo', N'table', N'__RefactorLog'
END
GO
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '9e4e7b8d-6e3b-48ab-9a5b-3c6baac3dbc6')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('9e4e7b8d-6e3b-48ab-9a5b-3c6baac3dbc6')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '58a35e63-5a63-4e55-9b25-528a4041b9f6')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('58a35e63-5a63-4e55-9b25-528a4041b9f6')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '72d0467d-7eae-454c-a7b5-ecd45badea34')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('72d0467d-7eae-454c-a7b5-ecd45badea34')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '6b9ffa46-3d83-436d-96c5-55ed1c729a07')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('6b9ffa46-3d83-436d-96c5-55ed1c729a07')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'fc698601-6ab7-435a-ac4f-d1824b61725a')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('fc698601-6ab7-435a-ac4f-d1824b61725a')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '5d35e439-ec4d-4614-8bbc-470751ba3990')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('5d35e439-ec4d-4614-8bbc-470751ba3990')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'f0d723a6-4d26-4699-93c0-98410b52b41f')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('f0d723a6-4d26-4699-93c0-98410b52b41f')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'db219a04-c9b9-4d2c-84e7-37a250742ff2')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('db219a04-c9b9-4d2c-84e7-37a250742ff2')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '96811e9e-ebf3-4040-946f-bf5f6c646a0c')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('96811e9e-ebf3-4040-946f-bf5f6c646a0c')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'afc1558f-c6cc-4e65-8d7f-52e1cf6ccce2')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('afc1558f-c6cc-4e65-8d7f-52e1cf6ccce2')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '02d920cd-62ef-41f3-91ef-3401d80380a9')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('02d920cd-62ef-41f3-91ef-3401d80380a9')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '663ecb1c-c92a-4120-9fc4-df58934c9c21')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('663ecb1c-c92a-4120-9fc4-df58934c9c21')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '4ac357b5-92fc-4472-9310-82f9839d01b9')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('4ac357b5-92fc-4472-9310-82f9839d01b9')

GO

GO
DECLARE @VarDecimalSupported AS BIT;

SELECT @VarDecimalSupported = 0;

IF ((ServerProperty(N'EngineEdition') = 3)
    AND (((@@microsoftversion / power(2, 24) = 9)
          AND (@@microsoftversion & 0xffff >= 3024))
         OR ((@@microsoftversion / power(2, 24) = 10)
             AND (@@microsoftversion & 0xffff >= 1600))))
    SELECT @VarDecimalSupported = 1;

IF (@VarDecimalSupported > 0)
    BEGIN
        EXECUTE sp_db_vardecimal_storage_format N'$(DatabaseName)', 'ON';
    END


GO
ALTER DATABASE [$(DatabaseName)]
    SET MULTI_USER 
    WITH ROLLBACK IMMEDIATE;


GO
PRINT N'Update complete.';


GO
